[module genCommon(	'http://www.obeonetwork.org/dsl/soa/4.0.0',
					'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::core::aql::base/]
[import fr::pacman::core::aql::query::dto/]
[import fr::pacman::soa::aql::file::genCommon/]
[import fr::pacman::common::aql::file::genEntityAbs/]
[import fr::pacman::core::property::project::ProjectProperties/]

[comment écriture des classes et fichiers soa pour la partie métier de l'application cible./]
[template public genCommon(m : soa::System)]
  [comment implémentation pour les champs automatique de la base de données (dto)./]
  [m.fileEntityAbs(m.commandDto())/]
  [for (s : soa::Service | m.eAllContents(soa::Service))]
    [comment implémentation du service métier./]
  	[s.fileServiceImpl()/]
  	[comment interface pour l'adapteur application./]
  	[s.fileServiceInItf()/]
  	[comment interface pour l'adapteur infrastructure./]
  	[s.fileServiceOutItf()/]
  	[comment implémentation des stubs pour les tests (métier + infra)./]
  	[s.fileServiceOutStubImpl()/]
  	[comment implémentation pour les règles de gestions associées au service métier./]
  	[if (s.get_useServiceRequirements())][s.fileServiceRequirementImpl()/][/if]
  [/for]
  [for (d : environment::DTO | m.withoutParentDtos())]
  	[comment implémentation des classes 'entité' pour le domaine./]
  	[d.fileDtoImpl()/]
  	[comment interface pour l'adaptateur infrastructure crud./]
  	[d.fileServiceOutCrudItf()/]
  [/for]
[/template]