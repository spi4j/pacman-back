[module genCommon(	'http://www.obeonetwork.org/dsl/soa/4.0.0', 
					'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::core::aql::base/]	
[import fr::pacman::core::aql::name::classes/]	
[import fr::pacman::core::aql::name::packages/]	
[import fr::pacman::core::aql::output::resources/]
[import fr::pacman::soa::aql::block::service/]
[import fr::pacman::soa::aql::block::dto/]
[import fr::pacman::soa::aql::block::test/]

[comment écriture du fichier d'implémentation pour le service./]
[template public fileServiceImpl(s: soa::Service)]
  [file (s.nameClassServiceImpl().toFileJava(s.namePackageServiceImpl()), overwrite, s.defaultFileEncoding())]
    [s.serviceImpl()/]
  [/file]
[/template]

[comment écriture du fichier d'interface pour le service (métier -> application)./]
[template public fileServiceInItf(s: soa::Service)]
  [file (s.nameClassServiceInItf().toFileJava(s.namePackageInItf()), overwrite, s.defaultFileEncoding())]
    [s.inItf()/]
  [/file]
[/template]

[comment écriture du fichier d'interface pour le service de persistance (métier -> infrastructure)./]
[template public fileServiceOutItf(s: soa::Service)]
  [file (s.nameClassServiceOutItf().toFileJava(s.namePackageOutItf()), overwrite, s.defaultFileEncoding())]
    [s.outItf()/]
  [/file]
[/template]

[comment écriture du fichier d'interface pour le service technique de persistance crud (métier -> infrastructure)./]
[template public fileServiceOutCrudItf(d: environment::DTO)]
  [file (d.nameClassServiceCrudOutItf().toFileJava(d.namePackageCrudOutItf()), overwrite, d.defaultFileEncoding())]
    [d.crudOutItf()/]
  [/file]
[/template]

[comment écriture du fichier d'implémentation pour objet métier./]
[template public fileDtoImpl(d : environment::DTO, ds : Sequence(environment::DTO)
  , dss : Sequence(environment::DTO))]
  [file (d.nameClassDtoImpl().toFileJava(d.namePackageDtoImpl()), overwrite, d.defaultFileEncoding())]
    [d.dtoImpl(ds,dss)/]
  [/file]
[/template]

[comment écriture du fichier d'implémentation pour les exigences associées au service./]
[template public fileServiceRequirementImpl(s : soa::Service)]
  [file (s.nameClassServiceRequirementImpl().toFileJava(s.namePackageServiceImpl()), overwrite, s.defaultFileEncoding())]
    [s.requirementImpl()/]
  [/file]
[/template]

[comment écriture du fichier d'implémentation pour les stubs associés au service (domain / infra)./]
[template public fileServiceOutStubImpl(s : soa::Service)]
  [file (s.nameClassServiceOutStubImpl().toFileJava(s.namePackageOutStubImpl()), overwrite, s.defaultFileEncoding())]
    [s.serviceOutStubImpl()/]
  [/file]
[/template]