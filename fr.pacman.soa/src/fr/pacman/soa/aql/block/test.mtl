[module test(	'http://www.obeonetwork.org/dsl/soa/4.0.0', 
				'http://www.obeonetwork.org/dsl/environment/3.0.0')/]


[import fr::pacman::core::aql::base/]				
[import fr::pacman::core::aql::name::classes/]
[import fr::pacman::core::aql::name::packages/]
[import fr::pacman::core::aql::name::eobjects/]
[import fr::pacman::core::aql::output::headers/]
[import fr::pacman::core::aql::output::comments/]
[import fr::pacman::core::aql::output::resources/]
[import fr::pacman::core::aql::query::operation/]

[comment écriture de l'implémentation pour le stub associé au service (domain + infra)./]
[template public serviceOutStubImpl(s : soa::Service)]
  [s.classHeader(s.namePackageOutStubImpl())/]
  [protected ('imports'.protectedId()) startTagPrefix('// ') endTagPrefix('// ')]
    
    [s.defaultImports()/]
    import [s.namePackageProject()/].[s.namePackageCommonBase()/].[s.nameClassAnnotationStubOut()/];
    import [s.namePackageProject()/].[s.namePackageCommonException()/].[s.nameClassNotImplementedExceptionImpl()/];
    import [s.namePackageProject()/].[s.namePackageOutItf()/].[s.nameClassServiceOutItf()/];
    
  [/protected]
  
  /**
   * Implémentation de service stub pour le service [s.name()/]. Cette classe
   * implémente l'interface {@link [s.nameClassServiceOutItf()/]} et fournit une version
   * de base des opérations liées à la gestion des personnes. Elle sert de point
   * de départ pour des implémentations réelles ou de tests.
   * <p>
   * Cette classe est un stub, ce qui signifie qu'elle peut contenir des
   * implémentations vides ou des comportements par défaut pour les méthodes de
   * l'interface {@link [s.nameClassServiceOutItf()/]}.
   *
   * Positionner ici l'ensemble du code nécessaire pour remplacer les appels à la
   * couche de persistance. Cette classe peut être utilisée à la fois dans le
   * cadre des tests métier et dans le cadre des tests d'intégration.
   * @author [s.nameAuthor()/]  
   */
  @[s.nameClassAnnotationStubOut()/]
  public class [s.nameClassServiceOutStubImpl()/]  implements [s.nameClassServiceOutItf()/]
  {
  
    [for (o : soa::Operation | s.ownedInterface.ownedOperations)]
      [o.commentOperation()/]
      @Override
      public [o.outputType()/] [o.nameOperation()/] ([o.inputSignature()/])
      {
        
        [protected (o.name().protectedId()) startTagPrefix('// ') endTagPrefix('// ')]
          
          throw new [s.nameClassNotImplementedExceptionImpl()/]
             ("Le test n'a pas été implémenté pour le stub : [s.nameClassServiceImpl()/]");
          
        [/protected]
      }
         
      [/for]
  }
  
[/template]

[comment écriture de la signature complète d'une opération avec le paramètre en sortie et les paramètres en entrée./]
[query private writeOperation(o : soa::Operation) : String = 'public ' + o.outputType() + ' ' + o.nameOperation() + '(' + o.inputSignature() + ')' /]