[module xto(	'http://www.obeonetwork.org/dsl/soa/4.0.0', 
				'http://www.obeonetwork.org/dsl/entity/3.0.0', 
				'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::core::aql::base/]	
[import fr::pacman::core::aql::name::classes/]
[import fr::pacman::core::aql::name::packages/]
[import fr::pacman::core::aql::name::eobjects/]
[import fr::pacman::core::aql::query::attribute/]
[import fr::pacman::core::aql::output::headers/]
[import fr::pacman::core::aql::output::comments/]
[import fr::pacman::core::aql::output::resources/]
[import fr::pacman::core::aql::query::eobject/]
[import fr::pacman::core::aql::query::reference/]
[import fr::pacman::core::aql::query::dto/]
[import fr::pacman::core::aql::rule::parameter/]
[import fr::pacman::core::aql::rule::attribute/]
[import fr::pacman::core::aql::rule::method/]	

[comment écriture de l'implémentation pour un objet métier sérialisé./]
[template public implementation(d : environment::DTO)]
  [d.classHeader(d.namePackageXtoImpl())/]
  [protected ('imports'.protectedId()) startTagPrefix('// ') endTagPrefix('// ')]
  
    [d.defaultImports()/]
    import java.io.Serializable;
    import com.fasterxml.jackson.annotation.JsonProperty;
    
  [/protected]
  
  [d.commentClass()/]
  public class [d.nameClassXtoImpl()/] implements Serializable
  {
     // CONSTANTES
      
     ['SerialUid'.commentMultiLines()/]
     private static final long serialVersionUID = -1;
     
     [protected ('constantes'.protectedId()) startTagPrefix('// ') endTagPrefix('// ')]
     
     [/protected]
     
     ['Id'.commentSingleLine()/]
     private [d.defaultTypePk()/] [d.writePk()/];
     
     // ATTRIBUTS
     [let rs = d.referencesSB()]
       [for (a : environment::Attribute | d.attributesNoPKAndNoComputed())]
         [a.comment().commentSingleLine()/]
         [protected (a.nameAttribute().protectedId()) startTagPrefix('// ') endTagPrefix('// ')]
           @JsonProperty("[a.nameAttribute()/]")
         [/protected]
         private [a.type()/] [a.nameAttribute()/];
         
       [/for]
       [for (r : environment::Reference | rs)]
         [r.referencedDto(d).comment().commentSingleLine()/]
         [protected (r.referencedDto(d).name().protectedId()) startTagPrefix('// ') endTagPrefix('// ')]
           @JsonProperty("[r.referencedDto(d).name().apply_attributeDefault()/]")
         [/protected]
         private [r.referencedRsType(d)/] [r.referencedDto(d).name().apply_attributeDefault()/];
         
       [/for]
        
       [('Constructeur sans paramètre pour la classe : ' + d.nameClassXtoImpl()).commentMultiLines()/]
       public [d.nameClassXtoImpl()/] ()
       {
         super();
       }
       
       [let e = d.associatedEntity()]
         /**
          * Retourne l'identifiant pour le dto. 
          *
          * @return la valeur de l'identifiant.
          */
          public [d.defaultTypePk()/] [e.nameSimplePropertyID().apply_methodGet()/]()
          {
            return [d.prefixAffectation()/][e.nameSimplePropertyID().apply_attributeDefault()/];
          }
       
         /**
          * Affecte l'identifiant pour le dto'. 
          *
          * @param la valeur de l'identifiant'.
          */
          public void [e.nameSimplePropertyID().apply_methodSet()/](final [d.defaultTypePk()/] [e.nameSimplePropertyID().apply_parameterMethodClassicIn()/])
          {
            [d.prefixAffectation()/][e.nameSimplePropertyID().apply_attributeDefault()/] = [e.nameSimplePropertyID().apply_parameterMethodClassicIn()/];
          }
       [/let]
        
       [for (a : environment::Attribute | d.attributesNoPKAndNoComputed())]
         [a.commentGet()/]
         public [a.type()/] [a.nameAttribute().apply_methodGet()/]()
         {
           return [a.prefixAffectation()/][a.nameAttribute()/];
         }
          
         [a.commentSet()/]
         public void [a.nameAttribute().apply_methodSet()/](final [a.type()/] [a.nameAttribute().apply_parameterMethodClassicIn()/]) 
         {
           [a.prefixAffectation()/][a.nameAttribute()/] = [a.nameAttribute().apply_parameterMethodClassicIn()/];
         }
          
       [/for]
       [for (r : environment::Reference | rs)]
         [r.referencedDto(d).commentGet()/]
         public [r.referencedRsType(d)/] [r.referencedDto(d).name().apply_methodGet()/]()
         {
           return [r.prefixAffectation()/][r.referencedDto(d).name().apply_attributeDefault()/];
         }
        
         [r.referencedDto(d).commentSet()/]
         public void [r.referencedDto(d).name().apply_methodSet()/](final [r.referencedRsType(d)/] [r.referencedDto(d).name().apply_parameterMethodClassicIn()/])
         {
           [r.prefixAffectation()/][r.referencedDto(d).name().apply_attributeDefault()/] = [r.referencedDto(d).name().apply_parameterMethodClassicIn()/];
         }
       [/for]
       
       // METHODES
       [protected ('methods'.protectedId()) startTagPrefix('// ') endTagPrefix('// ')]
       [/protected]
     [/let]
  }
[/template]

[comment raccourci pour l'écriture de la clé primaire./]
[query private writePk(d : environment::DTO) : String = d.associatedEntity().nameSimplePropertyID().apply_attributeDefault()/]
