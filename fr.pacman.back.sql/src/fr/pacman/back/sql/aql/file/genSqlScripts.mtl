[module genSqlScripts(	'http://www.obeonetwork.org/dsl/entity/3.0.0', 
				'http://www.obeonetwork.org/dsl/entity/2.0.0/utilities')/]

[import fr::pacman::back::core::aql::base/]	
[import fr::pacman::back::core::aql::path::resources/]
[import fr::pacman::back::core::aql::name::databases/]
[import fr::pacman::back::core::aql::output::resources/]
[import fr::pacman::back::sql::aql::script::genSqlScripts/]

[comment écriture du script de création pour la base de données 'dbType'./]
[template public genSqlCreateScript(root : entity::Root, es : Sequence(entity::Entity), ess : Sequence(entity::Entity), dbType : String)]
  [file (root.nameScriptCreate(dbType).toFileSql(root.dirSqlScripts()), overwrite, root.defaultFileEncoding())]
    [root.createSqlTables(es,ess,dbType)/]
  [/file]
[/template]

[comment écriture du script de suppression pour la base de données 'dbType'./]
[template public genSqlDropScript(root : entity::Root, es : Sequence(entity::Entity), ess : Sequence(entity::Entity), dbType : String)]
  [file (root.nameScriptDrop(dbType).toFileSql(root.dirSqlScripts()), overwrite, root.defaultFileEncoding())]
    [root.dropSqlTables(es,ess,dbType)/]
  [/file]
[/template]

[comment écriture du script d'initialisation pour la base de données H2./]
[template public genSqlIntegrationInitScript(root : entity::Root, es : Sequence(entity::Entity), ess : Sequence(entity::Entity), dbType : String)]
  [file (root.nameScriptIntegrationInit(dbType).toFileSqlT(), overwrite, root.defaultFileEncoding())]
    [root.initSqlIntegrationData(es,ess,dbType)/]
  [/file]
[/template]

[comment écriture du script de création pour la base de données des tests d'intégration sur h2./]
[template public genSqlIntegrationCreateScript(root : entity::Root, es : Sequence(entity::Entity), ess : Sequence(entity::Entity), dbType : String)]
  [file (root.nameScriptCreate(dbType).toFileSqlT(), overwrite, root.defaultFileEncoding())]
    [root.createSqlIntegrationTables(es,ess,dbType)/]
  [/file]
[/template]