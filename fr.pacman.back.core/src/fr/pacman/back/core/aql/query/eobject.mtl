[module eobject(	'http://www.obeonetwork.org/dsl/environment/3.0.0',
					'http://www.obeonetwork.org/dsl/entity/3.0.0',
					'http://www.obeonetwork.org/dsl/soa/4.0.0')/]

[import fr::pacman::back::core::aql::base/]
[import fr::pacman::back::core::aql::string/]
[import fr::pacman::back::core::aql::query::attribute/]

[import fr::pacman::back::core::service::EObjectUtils/]
[import fr::pacman::back::core::service::AnnotationUtils/]
[import fr::pacman::back::core::property::project::ProjectProperties/]

[comment liste des requêtes possibles et qui sont communes aux différents objets de modélisation./]

[comment retourne le système racine d'un eobjet./]  
[query public root(any : ecore::EObject) : environment::NamespacesContainer = 
	any.get_root().oclAsType(environment::NamespacesContainer)/]

[comment vérifie si une description a été saisie pour l'objet./]
[query public hasComment(o : environment::ObeoDSMObject) : Boolean = o.description <> null 
	and o.description.trim().escapeComment().size() > 0 /]

[comment retourne le commentaire éventuellement attaché pour l'objet./]
[query public comment(o : environment::ObeoDSMObject) : String = if (o.hasComment()) 
	then o.description.trim().escapeComment() else o.cNoDescription() endif/]

[comment vérifie si un objet existe bien./]
[query public exists(any : ecore::EObject) : Boolean = any <> null/]
  
[comment retourne l'ensemble des champs supplémentaires pour la persistance./]
[query public autoAttributes(any : ecore::EObject) : Sequence(String) = any.get_SQLAutoFields()
	.trim().tokenize(',')->select(o | o.hasToWriteAutoAttribute())/]
	
[comment vérifie l'existance d'un champ supplémentaire de type xtopsup./]
[query public hasXtopSup(any : ecore::EObject) : Boolean = not any.autoAttributes()
	->select(o | o.contains(any.keyXtopSup()))->isEmpty()/]

[comment vérifie l'existance d'un champ supplémentaire de type xdmaj./]
[query public hasXdMaj(any : ecore::EObject) : Boolean = not any.autoAttributes()
	->select(o | o.contains(any.keyXdMaj()))->isEmpty()/]

[comment vérifie l'existance d'un champ supplémentaire de type xuuid (uniformiser pour x.. ?)./]
[query public hasXuuId(any : ecore::EObject) : Boolean = not any.autoAttributes()
	->select(o | o.contains(any.keyXuId()))->isEmpty()/]

[comment vérifie l'existance de champ(s) supplémentaire(s) de type xtopsup ou xdmaj./]
[query public hasXtoSupOrXdMaj(any : ecore::EObject) : Boolean = any.hasXtopSup() or any.hasXdMaj()/]
  
[comment vérifie si il existe des attributs automatiques pour la couche de persistance./]
[query public hasAutoAttributes(any : ecore::EObject) : Boolean = any.get_SQLAutoFields().trim().size() > 0/]

[comment vérifie si un type hérite bien du super type passé en paramètre./]
[query public isSubType(st : environment::StructuredType, super : environment::StructuredType) : Boolean = if (st.supertype = null)
	then false else if (st.supertype = super) then true else st.supertype.isSubType(super) endif endif/]

