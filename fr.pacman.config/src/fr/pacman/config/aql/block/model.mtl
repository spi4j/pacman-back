[module model(	'http://www.obeonetwork.org/dsl/overview/2.0.0')/]

[import fr::pacman::core::aql::base/]
[import fr::pacman::core::aql::name::classes/]
[import fr::pacman::core::aql::name::packages/]

[comment √©criture du fichier de configuration Maven pour le sous-projet de mod√©lisation./]
[template public pom (any : ecore::EObject)]
  <project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>[any.namePackageProject()/]</groupId>
        <artifactId>[any.nameProject()/]</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <artifactId>[any.nameProjectModel()/]</artifactId>
    <packaging>jar</packaging>
    
    <!-- M√™me si ce n‚Äôest pas strictement n√©cessaire pour Maven, certains outils
    (comme Eclipse avec m2e) veulent le voir dans chaque module. -->
    <properties>
       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
  </project>
[/template]

[comment ./]
[template public readMe (any : ecore::EObject)]
  <style>
      body {
          font-family: 'Segoe UI Emoji', 'Arial', sans-serif;
      }
  </style>
  <h1>Bienvenue dans votre nouveau projet [any.nameProject()/]</h1>
  <hr />
  <p>Ce fichier vous permet de rapidement prendre en main le d√©marrage de l'application :</p>
  <h2>üìÅ Projets inclus</h2>
  <p>Quatre projets sont cr√©√©s :</p>
  <ul>
  <li><strong>[any.nameProject()/]</strong> : le projet qui encapsule les trois autres projets, son seul r√¥le est de contenir le fichier pom.xml parent.</li>
  <li><strong> [any.nameProjectCommon()/]</strong> : le projet m√©tier (architecture hexagonale), il ne contient aucune r√©f√©rence technique et ne doit comporter que les services m√©tiers.</li>
  <li><strong>[any.nameProjectModel()/]</strong> : le projet de mod√©lisation. Aucune classe Java ne doit √™tre pr√©sente dans ce projet. Il n'est, par ailleurs, pas embarqu√© lors du d√©ploiement de l'application.</li>
  <li><strong>[any.nameProjectServer()/]</strong> : le projet d'infrastructure qui contient le framework Spring Boot et toutes les couches techniques pour manipuler la couche m√©tier [any.nameProjectCommon()/].</li>
  </ul>
  <hr/>
  <h2>üìÇ Emplacement des fichiers de configuration et classe de d√©marrage</h2>
  <ul>
  <li style="margin-bottom: 10px;"><b>Configuration des options pour la g√©n√©ration</b> : <code>[any.nameProjectModel()/]/[any.namePropertiesDirectory()/]/project.properties</code>
       Utiliser ce fichier de configuration pour modifier les diff√©rentes options utilis√©es pour la g√©n√©ration de code. Ce fichier a 
       initialement √©t√© cr√©√© suite aux principaux choix dans le formulaire de cr√©ation mais toute modification sera automatiquement prise 
       en compte lors de la prochaine g√©n√©ration.
       Attention : lors du d√©veloppement et avec la configuration propos√©e par d√©faut, l'initialisation de la base de donn√©es est effectu√©e 
       directement par SpringData et non √† l'aide de scripts g√©n√©r√©s.
  </li>
  <li style="margin-bottom: 10px;"><b>Configuration du nommage des classes et interfaces pour la g√©n√©ration</b> : <code>[any.nameProjectModel()/]/[any.namePropertiesDirectory()/]/nommage.properties</code>
       Utiliser ce fichier de configuration pour modifier les diff√©rentes options de nommage utilis√©es pour la g√©n√©ration de code. Si 
       par exemple vous d√©sirez que tous la param√®tres des m√©thodes soient pr√©fix√©s par <code>'p_'</code>, il suffit de modifier la propri√©t√©
       suivante dans le fichier de configuration <code>parameterMethodClassicIn=['['/]CamelCase.LowerFirst/[']'/]</code> 
       en <code>parameterMethodClassicIn=p_['['/]CamelCase.LowerFirst/[']'/]</code>. 
       Toute modification sera automatiquement prise en compte lors de la prochaine g√©n√©ration.
  </li>
  <li style="margin-bottom: 10px;"><b>Configuration principale</b> : <code>[any.nameProjectServer()/]/[any.dirResources()/]application.properties</code>
       Le fichier de configuration de SpringBoot, avec l'api de sant√©, les metrics, les datasources, etc...
  </li>
  <li style="margin-bottom: 10px;"><b>Configuration pour les tests d'int√©gration</b> : <code>[any.nameProjectServer()/]/[any.dirTestResources()/]test.properties</code>
       Le fichier de configuration pour les tests de SpringBoot avec les informations pour la configuration de la datasource de test.
       Attention : pour les tests, l'initialisation de la base de donn√©es est effectu√©e √† l'aide des scripts SQL g√©n√©r√©s.
  </li>
  <li style="margin-bottom: 10px;"><b>R√©pertoire de stockage des scripts SQL</b> : <code>[any.nameProjectServer()/]/[any.dirResources()/]sql</code>
       Dans ce r√©pertoire sont stock√©s tous les scripts SQL de cr√©ation de la base de donn√©es pour la production, il existe un script 
       par type de base de donn√©es s√©lectionn√©e et pr√©sente dans le fichier de configuration <code>project.properties</code>.
  </li>
  <li style="margin-bottom: 10px;"><b>Classe principale (√† ex√©cuter en Java Application)</b> : <code>[any.nameProjectServer()/]/[any.dirSources()/][any.namePackageProject()/]/[any.nameClassAppBootstrap()/]</code>
       La classe de d√©marrage de SpringBoot.
  </li>
  </ul>
  <hr/>
  <h2>üìÅ Principaux packages g√©n√©r√©s</h2>
  <ul>
    <li>[any.nameProjectServer()/]
       <ul>
          <li><code>[any.namePackageProject()/].[any.namePackageRsBase()/]</code> : classes de haut niveau pour les services rest.</li>
          <li><code>[any.namePackageProject()/].[any.namePackageRsControllerBase()/]</code> : contr√¥leur par d√©faut pour la customisation de l'api de sant√©.</li>
          <li><code>[any.namePackageProject()/].[any.namePackageException()/]</code> : exceptions de base pour les services rest.</li>
          <li><code>[any.namePackageProject()/].[any.namePackageInfrastructureBase()/]</code> : classes de haut niveau pour les services de persistance.</li>
       </ul>
    </li>
    <li>[any.nameProjectCommon()/]
       <ul>
          <li><code>[any.namePackageProject()/].[any.namePackageCommonBase()/]</code> : annotations m√©tier.</li>
          <li><code>[any.namePackageProject()/].[any.namePackageCommonException()/]</code> : exceptions de base pour la couche m√©tier.</li>
          <li><code>[any.namePackageProject()/].[any.namePackageRequirement()/]</code> : classes de haut niveau pour les r√®gles de gestion.</li>
       </ul>
    </li>  
  </ul>
  <hr />
  <h2>üöÄ Pour tester rapidement le squelette de l'application</h2>
  <ol>
  <li><p>G√©n√©rer la couche SOA :</p>
  <ul>
  <li>Clic droit sur le fichier de mod√©lisation <code>[any.nameProjectModel()/]</code>  </li>
  <li>Choisir : <code>/G√©n√©rateurs Cali</code> ‚Üí <code>G√©n√©ration de la couche de service</code></li>
  </ul></li>
  <li><p>Lancer l'application :</p>
  <ul>
  <li>Clic droit sur la classe principale dans <code>[any.nameProjectServer()/]/[any.dirSources()/][any.namePackageProject()/]/[any.nameClassAppBootstrap()/]</code></li>
  <li>Choisir : <code>/Run As</code> ‚Üí <code>Java Application</code></li>
  </ul></li>
  <li><p>Par d√©faut, les URIs suivantes doivent r√©pondre :</p>
  <ul>
  <li><code>http://localhost:8080/actuator/health</code></li>
  <li><code>http://localhost:8080/actuator/info</code></li>
  <li><code>http://localhost/swagger-ui</code></li>
  <li><code>http://localhost/api-docs</code></li>
  </ul></li>
  </ol>
  <hr/>
  <h2>üöÄ Pour commencer rapidement</h2>
  <ol>
  <li><p>Mod√©liser des entit√©s au niveau du projet de mod√©lisation (<code>[any.nameProject().toLower()/].entity</code>) </p>
  <li><p>G√©n√©rer les scripts SQL √† l'aide du g√©n√©rateur SQL.</p>
  <li><p>G√©n√©rer les classes √† l'aide du g√©n√©rateur de la couche de persistance.</p>
  <li><p>Aller dans le projet <code>[any.nameProjectServer()/]</code> et faire tourner les tests sur la datasource.</p>
  <li><p>Mod√©liser la couche SOA au niveau du projet de mod√©lisation (<code>[any.nameProject().toLower()/].soa</code>).</p>
  <li><p>Compl√©ter la couche SOA en positionnant le code n√©cessaire au niveau des balises d√©di√©es au code utilisateur.</p>
  <li><p>Aller dans le projet <code>[any.nameProjectServer()/]</code>, compl√©ter et faire tourner les tests d'int√©gration.</p>
  <li><p>Lancer la classe de boostrap pour l'application et tester les r√©ponses du serveur.</p>
  </ol>
[/template]