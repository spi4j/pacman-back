[module genCommon(	'http://www.obeonetwork.org/dsl/overview/2.0.0')/]

[import fr::pacman::core::aql::base/]
[import fr::pacman::core::aql::name::classes/]
[import fr::pacman::core::aql::name::packages/]
[import fr::pacman::config::aql::block::common/]
[import fr::pacman::core::aql::output::resources/]

[comment écriture du fichier de configuration Maven pour le projet métier./]
[template public filePom(any : ecore::EObject, body : String)]
  [file (any.namePom().toFilePom(null), overwrite, any.defaultFileEncoding())][body/][/file]
[/template]

[comment écriture du fichier pour le type Binary (commun à tous les frameworks)./]
[template public fileBinaryType(any : ecore::EObject, body : String)]
  [file (any.nameTypeBinary().nameClassType().toFileJava(any.namePackageType()), overwrite, any.defaultFileEncoding())][body/][/file]
[/template]

[comment écriture du fichier d'annotation (commun à tous les frameworks ?)./]
[template public fileAnnotationDomainService(any : ecore::EObject, body : String)]
  [file (any.nameClassAnnotationOut().toFileJava(any.namePackageAnnotation()), overwrite, any.defaultFileEncoding())][body/][/file]
[/template]

[comment écriture du fichier d'annotation (commun à tous les frameworks ?)./]
[template public fileAnnotationAdapter(any : ecore::EObject, body : String)]
  [file (any.nameClassAnnotationIn().toFileJava(any.namePackageAnnotation()), overwrite, any.defaultFileEncoding())][body/][/file]
[/template]