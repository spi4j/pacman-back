[module headers(	'http://www.obeonetwork.org/dsl/entity/3.0.0')/]

[import fr::pacman::core::aql::base/]
[import fr::pacman::core::aql::string/]	
[import fr::pacman::core::aql::name::databases/]	
[import fr::pacman::core::service::DateUtils/]

[comment écriture de l'en-tête pour le schéma./]
[template public schemaHeader(any : ecore::EObject)]
  [any.ensureBlankLine()/]
  [any.cLine()/]
  [('Schema: ' + any.prefixTableSchema().toUpper().replaceAll('\\.', '')).ensureSlashLine(any.defaultMaxSizeSqlHeader())/]
  [any.cLine()/]
[/template]

[comment écriture de l'en-tete pour les contraintes./]
[template public constraintsHeader(any : ecore::EObject)]
  [any.ensureBlankLine()/]
  [any.cLine()/]
  ['Contraintes'.ensureSlashLine(any.defaultMaxSizeSqlHeader())/]
  [any.cLine()/]
[/template]

[comment écriture de l'en-tête pour les séquences./]
[template public sequencesHeader(any : ecore::EObject)]
  [any.ensureBlankLine()/]
  [any.cLine()/]
  ['Sequences'.ensureSlashLine(any.defaultMaxSizeSqlHeader())/]
  [any.cLine()/]
[/template]

[comment écriture de l'en-tête pour les indexs./]
[template public indexsHeader(any : ecore::EObject)]
  [any.ensureBlankLine()/]
  [any.cLine()/]
  ['Indexs'.ensureSlashLine(any.defaultMaxSizeSqlHeader())/]
  [any.cLine()/]
[/template]

[comment écriture de l'en-tête pour une table./]
[template public tableHeader(e : entity::Entity)]
  [e.ensureBlankLine()/]
  [e.cLine()/]
  [e.nameTableHeader().toUpper().ensureSlashLine(e.defaultMaxSizeSqlHeader())/]
  [e.cLine()/]
[/template]

[comment écriture de l'en-tête pour les insertions dans le script d'initialisation./]
[template public insertsHeader(any : ecore::EObject)]
  [any.ensureBlankLine()/]
  [any.cLine()/]
  ['Insertions'.ensureSlashLine(any.defaultMaxSizeSqlHeader())/]
  [any.cLine()/]
[/template]

[comment écriture du commentaire pour l'initialisation de la base de données./]
[template public initCommentHeader(any : ecore::EObject)]
  [any.ensureBlankLine()/]
  [any.cLine()/]
  ['Ne pas décommenter ce code.'.ensureSlashLine(any.defaultMaxSizeSqlHeader())/] 
  ['Copier ce code d\'exemple dans les balises User Code'.ensureSlashLine(any.defaultMaxSizeSqlHeader())/]
  ['en fin de fichier.'.ensureSlashLine(any.defaultMaxSizeSqlHeader())/]
  [any.cLine()/]
[/template]

[comment écriture des en-têtes pour l'ensemble des scripts SQL./]
[template public scriptsHeader (any : ecore::EObject, dbType : String)]
  [any.cLine()/]
  [dbType.writeHeaderTypeDatabase().ensureSlashLine(any.defaultMaxSizeSqlHeader())/]
  [any.writeHeaderProject().ensureSlashLine(any.defaultMaxSizeSqlHeader())/]
  [any.writeHeaderCreationDate().ensureSlashLine(any.defaultMaxSizeSqlHeader())/]
  [any.cLine()/]
[/template]

[comment ligne d'en-tête pour le type de la base de données./]
[query private writeHeaderTypeDatabase(dbType : String) : String = 'Base de donnees:      ' + dbType/]

[comment ligne d'en-tête pour le nom de l'application./]
[query private writeHeaderProject(any : ecore::EObject) : String = 'Application:          ' + any.nameProject()/]

[comment ligne d'en-tête pour la date de création script./]
[query private writeHeaderCreationDate(any : ecore::EObject) : String = 'Date de creation:     ' + 'dd/MM/yyyy HH:mm:ss'.get_dateTime()/]