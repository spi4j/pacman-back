[module genSqlScripts(	'http://www.obeonetwork.org/dsl/entity/3.0.0', 
				'http://www.obeonetwork.org/dsl/entity/2.0.0/utilities')/]

[import fr::pacman::core::aql::base/]	
[import fr::pacman::core::aql::path::resources/]
[import fr::pacman::core::aql::name::databases/]
[import fr::pacman::core::aql::output::resources/]
[import fr::pacman::sql::aql::script::genSqlScripts/]

[comment écriture du script de création pour la base de données 'dbType'./]
[template public genSqlCreateScript(r : entity::Root, es : Sequence(entity::Entity), dbType : String)]				
  [file (r.nameScriptCreate(dbType).toFileSql(r.dirSqlScripts()), overwrite, r.defaultFileEncoding())]
    [r.createSqlTables(es, dbType)/]
  [/file]
[/template]

[comment écriture du script de suppression pour la base de données 'dbType'./]
[template public genSqlDropScript(r : entity::Root, es : Sequence(entity::Entity), dbType : String)]				
  [file (r.nameScriptDrop(dbType).toFileSql(r.dirSqlScripts()), overwrite, r.defaultFileEncoding())]
    [r.dropSqlTables(es, dbType)/]
  [/file]
[/template]

[comment écriture du script d'initialisation pour la base de données H2./]
[template public genSqlIntegrationInitScript(r : entity::Root, es : Sequence(entity::Entity), dbType : String)]			
  [file (r.nameScriptIntegrationInit(dbType).toFileSqlT(), overwrite, r.defaultFileEncoding())]
    [r.initSqlIntegrationData(es, dbType)/]
  [/file]
[/template]

[comment écriture du script de création pour la base de données des tests d'intégration sur h2./]
[template public genSqlIntegrationCreateScript(r : entity::Root, es : Sequence(entity::Entity), dbType : String)]				
  [file (r.nameScriptCreate(dbType).toFileSqlT(), overwrite, r.defaultFileEncoding())]
    [r.createSqlIntegrationTables(es, dbType)/]
  [/file]
[/template]