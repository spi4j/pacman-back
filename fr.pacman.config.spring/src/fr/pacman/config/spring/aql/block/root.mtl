[module root(	'http://www.obeonetwork.org/dsl/overview/2.0.0')/]

[import fr::pacman::core::aql::base/]
[import fr::pacman::core::aql::versions/]
[import fr::pacman::core::property::project::ProjectProperties/]

[comment écriture du fichier de configuration Maven pour le projet principal (root)./]
[template public pom (any : ecore::EObject)]
  <project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>[any.namePackageProject()/]</groupId>
    <artifactId>[any.nameProject()/]</artifactId>
    <packaging>pom</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <name>safran2</name>
    <description></description>
    <issueManagement>
    </issueManagement>
    <ciManagement>
    </ciManagement>
    <organization>
    </organization>
    <scm>
    </scm>
    
    <modules>
      <module>[any.nameProjectCommon()/]</module>
      <module>[any.nameProjectServer()/]</module>
      <module>[any.nameProjectModel()/]</module>
    </modules>
    
    <!-- Repository specifique pour les pilotes Oracle. -->
    <repositories>
    	<repository>
        	<id>hand-china-repo</id>
        	<name>HandChinaRepo</name>
        	<url>http://nexus.saas.hand-china.com/content/repositories/rdc/</url>
    	</repository>
    </repositories>
    
    <dependencyManagement>
       <dependencies>
          <dependency>
             <groupId>org.junit.jupiter</groupId>
             <artifactId>junit-jupiter</artifactId>
             <version>[any.versionJupiter()/]</version>
             <scope>test</scope>
          </dependency>
          <dependency>
             <groupId>org.assertj</groupId>
             <artifactId>assertj-core</artifactId>
             <version>[any.versionAssertJ()/]</version>
             <scope>test</scope>
          </dependency>
          <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-data-jpa</artifactId>
             <version>[any.versionSpringBoot()/]</version>
          </dependency>
          <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-web</artifactId>
             <version>[any.versionSpringBoot()/]</version>
          </dependency>
          <dependency> 
             <groupId>org.springframework.boot</groupId> 
             <artifactId>spring-boot-starter-security</artifactId>              <version>[any.versionSpringBoot()/]</version>
          </dependency>          
          <dependency>
             <groupId>com.h2database</groupId>
             <artifactId>h2</artifactId>
             <version>[any.versionH2()/]</version>
             <scope>runtime</scope>
          </dependency>
          <dependency>
          	<groupId>org.springframework.boot</groupId>
          	<artifactId>spring-boot-starter-oauth2-client</artifactId>
          	<version>[any.versionSpringBoot()/]</version>
          </dependency>
          <dependency>
          	<groupId>org.springframework.boot</groupId>
          	<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
          	<version>[any.versionSpringBoot()/]</version>
          </dependency>
          <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>[any.versionSpringBoot()/]</version>
            <scope>test</scope>
          </dependency>
          <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <version>[any.versionSpringBoot()/]</version>
            <scope>runtime</scope>
            <optional>true</optional>
          </dependency>
          <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>[any.versionSpringBoot()/]</version>
            <scope>test</scope>
          </dependency>
          <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>[any.versionSpringBoot()/]</version>
          </dependency>
          [if (any.get_dataBasesNames().toLower().index('postgresql') != -1)]
            <dependency>
              <groupId>org.postgresql</groupId>
              <artifactId>postgresql</artifactId>
              <version>[any.versionPostgres()/]</version>
              <scope>runtime</scope>
            </dependency>
          [/if]
          [if (any.get_dataBasesNames().toLower().index('mysql') != -1)]
            <dependency>
              <groupId>mysql</groupId>
              <artifactId>mysql-connector-java</artifactId>
              <version>[any.versionMySql()/]</version>
              <scope>runtime</scope>
            </dependency>
          [/if]
          [if (any.get_dataBasesNames().toLower().index('mariadb') != -1)]
            <dependency>
              <groupId>org.mariadb.jdbc</groupId>
              <artifactId>mariadb-java-client</artifactId>
              <version>[any.versionMariaDb()/]</version>
              <scope>runtime</scope>
            </dependency>
          [/if]
          [if (any.get_dataBasesNames().toLower().index('oracle-') != -1)]
            <dependency>
              <groupId>com.oracle</groupId>
              <artifactId>ojdbc7</artifactId>
              <version>[any.versionOracle()/]</version>
              <scope>runtime</scope>
            </dependency>
          [/if]
          [if (any.get_dataBasesNames().toLower().index('oracle+') != -1)]
            <dependency>
              <groupId>com.oracle.database.jdbc</groupId>
              <artifactId>ojdbc8</artifactId>
              <version>[any.versionOracle32()/]</version>
              <scope>runtime</scope>
            </dependency>
          [/if]
       </dependencies>
    </dependencyManagement>
    
    <build>
    <pluginManagement>
       <plugins>
          <!-- Vérification des prérequis -->
          <plugin>
             <groupId>org.apache.maven.plugins</groupId>
             <artifactId>maven-enforcer-plugin</artifactId>
             <version>[any.versionMavenEnforcerPlugin()/]</version>
             <executions>
                <execution>
                   <id>enforce</id>
                   <goals>
                      <goal>enforce</goal>
                   </goals>
                   <configuration>
                      <rules>
                         <banDuplicatePomDependencyVersions/>
                         <requireMavenVersion>
                            <version>[any.versionMaven()/]</version>
                         </requireMavenVersion>
                         <requireJavaVersion>
                            <version>[any.get_javaVersion()/]</version>
                         </requireJavaVersion>
                      </rules>
                   </configuration>
                </execution>
             </executions>
          </plugin>
       </plugins>
       </pluginManagement>
       <plugins>
         <!-- Compilation de l'application -->
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>[any.versionMavenCompilerPlugin()/]</version>
            <configuration>
               <release>[any.get_javaVersion()/]</release>
               <compilerArgument>-Xlint</compilerArgument>
            </configuration>
         </plugin>
       </plugins>
    </build>
  </project>
[/template]

