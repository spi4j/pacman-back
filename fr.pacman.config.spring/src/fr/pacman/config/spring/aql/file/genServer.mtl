[module genServer(	'http://www.obeonetwork.org/dsl/overview/2.0.0')/]


[import fr::pacman::core::aql::base/]
[import fr::pacman::core::aql::name::classes/]
[import fr::pacman::core::aql::name::packages/]
[import fr::pacman::core::aql::name::resources/]
[import fr::pacman::config::spring::aql::block::server/]
[import fr::pacman::core::aql::output::resources/]

[comment écriture du fichier de configuration Maven pour le projet d'infrastructure./]
[template public filePom(any : ecore::EObject)]
  [file (any.namePom().toFilePom(null), overwrite, any.defaultFileEncoding())]
    [any.pom()/]
  [/file]
[/template]

[comment écriture du fichier d'implémentation pour le bootstrap de l'application./]
[template public fileApplicationBootstrap(any : ecore::EObject)]
  [file (any.nameClassAppBootstrap().toFileJava(null), overwrite, any.defaultFileEncoding())]
    [any.applicationBootstrapImpl()/]
  [/file]
[/template]

[comment écriture de la classe pour la gestion globale des exceptions rest./]
[template public fileRsExceptionHandlerImpl(any : ecore::EObject)]
  [file (any.nameClassRsExceptionHandlerImpl().toFileJava(any.namePackageRsBase()), overwrite, any.defaultFileEncoding())]
    [any.rsExceptionhandlerImpl()/]
  [/file]
[/template]

[comment écriture de la classe d'exception pour le 404/204./]
[template public fileRsDataNotFoundExceptionImpl(any : ecore::EObject)]
  [file (any.nameClassRsDataNotFoundExceptionImpl().toFileJava(any.namePackageException()), overwrite, any.defaultFileEncoding())]
    [any.rsDataNotFoundExceptionImpl()/]
  [/file]
[/template]

[comment écriture de la classe d'exception pour le 401/403./]
[template public fileRsAuthenticationExceptionImpl(any : ecore::EObject)]
  [file (any.nameClassRsAuthenticationExceptionImpl().toFileJava(any.namePackageException()), overwrite, any.defaultFileEncoding())]
    [any.rsAuthenticationExceptionImpl()/]
  [/file]
[/template]

[comment écriture de la classe pour le corps de la reponse dans le cadre de la gestion globale des erreurs rest./]
[template public fileRsErrorBodyResponseImpl(any : ecore::EObject)]
  [file (any.nameClassRsErrorBodyResponseImpl().toFileJava(any.namePackageRsBase()), overwrite, any.defaultFileEncoding())]
    [any.rsErrorBodyResponseImpl()/]
  [/file]
[/template]

[comment écriture de la classe de définition des vues (si besoin) pour les services REST./]
[template public fileRsJsonViewsImpl(any : ecore::EObject)]
  [file (any.nameClassRsJsonViewsImpl().toFileJava(any.namePackageRsBase()), overwrite, any.defaultFileEncoding())]
    [any.rsJsonViewsImpl()/]
  [/file]
[/template]

[comment écriture de la classe pourla reponse dans le cadre d'une errueur d'authentification rest./]
[template public fileRsAuthenticationEntryPointImpl(any : ecore::EObject)]
  [file (any.nameClassRsAuthenticationEntryPointImpl().toFileJava(any.namePackageRsBase()), overwrite, any.defaultFileEncoding())]
    [any.rsAuthenticationEntryPointImpl()/]
  [/file]
[/template]

[comment écriture de la classe de résolution des statuts http (int <-> HTTPStatus) pour les erreurs rest./]
[template public fileRsHttpStatusResolverImpl(any : ecore::EObject)]
  [file (any.nameClassRsHttpStatusResolverImpl().toFileJava(any.namePackageRsBase()), overwrite, any.defaultFileEncoding())]
    [any.rsHttpStatusResolverImpl()/]
  [/file]
[/template]

[comment écriture de la classe helper pour obtenir des informations sur le jeton jwt courant (partout dans l'application hors domain)./]
[template public fileRsCurrentTokenHelperImpl(any : ecore::EObject)]
  [file (any.nameClassRsCurrentTokenHelperImpl().toFileJava(any.namePackageRsBase()), overwrite, any.defaultFileEncoding())]
    [any.rsCurrentTokenHelperImpl()/]
  [/file]
[/template]

[comment écriture du fichier de propriété pour les datasources./]
[template public fileApplicationProperties(any : ecore::EObject)]
  [file (any.nameApplicationResources().toFile(any.namePackageResources(), '.properties'), overwrite, 'ISO-8859-1')]
    [any.applicationProperties()/]
  [/file]
[/template]

[comment écriture de la classe de gestion des transactions jpa./]
[template public fileJpaTransactionExecutorImpl(any : ecore::EObject)]
  [file (any.nameClassJpaTransactionExecutorImpl().toFileJava(any.namePackageInfrastructureBase()), overwrite, any.defaultFileEncoding())]
    [any.jpaTransactionExecutorImpl()/]
  [/file]
[/template]

[comment écriture de la classe de gestion aspect des transactions jpa./]
[template public fileJpaTransactionServiceAspectImpl(any : ecore::EObject)]
  [file (any.nameClassJpaTransactionServiceAspectImpl().toFileJava(any.namePackageInfrastructureBase()), overwrite, any.defaultFileEncoding())]
    [any.jpaTransactionServiceAspectImpl()/]
  [/file]
[/template]

[comment écriture de la classe de configuration pour les transactions jpa./]
[template public fileJpaTransactionConfigImpl(any : ecore::EObject)]
  [file (any.nameClassJpaTransactionConfigImpl().toFileJava(any.namePackageInfrastructureBase()), overwrite, any.defaultFileEncoding())]
    [any.jpaTransactionConfigImpl()/]
  [/file]
[/template]

[comment écriture du fichier de propriété pour les datasources dans le cadre des tests d'intégration (infra)./]
[template public fileIntegrationTestProperties(any : ecore::EObject)]
  [file (any.nameIntegrationResources().toFile(any.namePackageTestResources(), '.properties'), overwrite, 'ISO-8859-1')]
    [any.integrationProperties()/]
  [/file]
[/template]

[comment écriture de la classe abstraite pour les tests d'intégration (infra)./]
[template public fileIntegrationTestAbstract(any : ecore::EObject)]
  [file (any.nameClassIntegrationTestAbstract().toFileJavaT(null), overwrite, any.defaultFileEncoding())]
    [any.integrationTestAbstract()/]
  [/file]
[/template]

[comment écriture de la classe utilitaire pour les tests d'intégration (infra / app)./]
[template public fileIntegrationTestUtilsImpl(any : ecore::EObject)]
  [file (any.nameClassIntegrationTestUtils().toFileJavaT(null), overwrite, any.defaultFileEncoding())]
    [any.integrationTestUtils()/]
  [/file]
[/template]

[comment écriture du service rest (contrôleur) pour l'api de santé (health, infra)./]
[template public fileRsServiceHealthImpl(any : ecore::EObject)]
  [file (any.nameClassRsServiceHealthImpl().toFileJava(any.namePackageRsControllerBase()), overwrite, any.defaultFileEncoding())]
    [any.rsServiceHealthImpl()/]
  [/file]
[/template]


