[module genServer(	'http://www.obeonetwork.org/dsl/overview/2.0.0')/]


[import fr::pacman::core::aql::base/]
[import fr::pacman::core::aql::name::classes/]
[import fr::pacman::core::aql::name::packages/]
[import fr::pacman::core::aql::name::resources/]
[import fr::pacman::config::spring::aql::block::server/]
[import fr::pacman::core::aql::output::resources/]

[comment écriture du fichier de configuration Maven pour le projet d'infrastructure./]
[template public filePom(any : ecore::EObject)]
  [file (any.namePom().toFilePom(null), overwrite, any.defaultFileEncoding())]
    [any.pom()/]
  [/file]
[/template]

[comment écriture du fichier d'implémentation pour le bootstrap de l'application./]
[template public fileApplicationBootstrap(any : ecore::EObject)]
  [file (any.nameClassAppBoostrap().toFileJava(null), overwrite, any.defaultFileEncoding())]
    [any.applicationBoostrapImpl()/]
  [/file]
[/template]

[comment écriture de la classe pour la gestion globale des exceptions rest./]
[template public fileRsExceptionHandlerImpl(any : ecore::EObject)]
  [file (any.nameClassRsExceptionHandlerImpl().toFileJava(any.namePackageRsBase()), overwrite, any.defaultFileEncoding())]
    [any.rsExceptionhandlerImpl()/]
  [/file]
[/template]

[comment écriture de la classe d'exception pour le 404/204./]
[template public fileRsDataNotFoundExceptionImpl(any : ecore::EObject)]
  [file (any.nameClassRsDataNotFoundExceptionImpl().toFileJava(any.namePackageException()), overwrite, any.defaultFileEncoding())]
    [any.rsDataNotFoundExceptionImpl()/]
  [/file]
[/template]

[comment écriture de la classe pour le corps de la reponse dans le cadre de la gestion globale des erreurs rest./]
[template public fileRsErrorBodyResponseImpl(any : ecore::EObject)]
  [file (any.nameClassRsErrorBodyResponseImpl().toFileJava(any.namePackageRsBase()), overwrite, any.defaultFileEncoding())]
    [any.rsErrorBodyResponseImpl()/]
  [/file]
[/template]

[comment écriture de la classe de résolution des statuts http (int <-> HTTPStatus) pour les erreurs rest./]
[template public fileRsHttpStatusResolverImpl(any : ecore::EObject)]
  [file (any.nameClassRsHttpStatusResolverImpl().toFileJava(any.namePackageRsBase()), overwrite, any.defaultFileEncoding())]
    [any.rsHttpStatusResolverImpl()/]
  [/file]
[/template]

[comment écriture du fichier de propriété pour les datasources./]
[template public fileApplicationProperties(any : ecore::EObject)]
  [file (any.nameApplicationResources().toFile(any.namePackageResources(), '.properties'), overwrite, 'ISO-8859-1')]
    [any.applicationProperties()/]
  [/file]
[/template]

[comment écriture de la classe de gestion des transactions jpa./]
[template public fileJpaTransactionExecutorImpl(any : ecore::EObject)]
  [file (any.nameClassJpaTransactionExecutorImpl().toFileJava(any.namePackageInfrastructureBase()), overwrite, any.defaultFileEncoding())]
    [any.jpaTransactionExecutorImpl()/]
  [/file]
[/template]

[comment écriture de la classe de gestion aspect des transactions jpa./]
[template public fileJpaTransactionServiceAspectImpl(any : ecore::EObject)]
  [file (any.nameClassJpaTransactionServiceAspectImpl().toFileJava(any.namePackageInfrastructureBase()), overwrite, any.defaultFileEncoding())]
    [any.jpaTransactionServiceAspectImpl()/]
  [/file]
[/template]

[comment écriture de la classe de configuration pour les transactions jpa./]
[template public fileJpaTransactionConfigurationImpl(any : ecore::EObject)]
  [file (any.nameClassJpaTransactionConfigurationImpl().toFileJava(any.namePackageInfrastructureBase()), overwrite, any.defaultFileEncoding())]
    [any.jpaTransactionConfigurationImpl()/]
  [/file]
[/template]

[comment écriture du fichier de propriété pour les datasources dans le cadre des tests d'intégration (infra)./]
[template public fileIntegrationTestProperties(any : ecore::EObject)]
  [file (any.nameIntegrationResources().toFile(any.namePackageTestResources(), '.properties'), overwrite, 'ISO-8859-1')]
    [any.integrationProperties()/]
  [/file]
[/template]

[comment écriture de la classe abstraite pour les tests d'intégration (infra)./]
[template public fileIntegrationTestAbstract(any : ecore::EObject)]
  [file (any.nameClassOutIntegrationTestAbstract().toFileJavaT(any.namePackageInfrastructureBase()), overwrite, any.defaultFileEncoding())]
    [any.integrationTestAbstract()/]
  [/file]
[/template]


