[module parameter(		'http://www.obeonetwork.org/dsl/environment/3.0.0', 
						'http://www.obeonetwork.org/dsl/soa/4.0.0')/]

[import fr::pacman::core::aql::query::property/]

[comment liste des requêtes possibles sur les paramètres./]							

[comment vérifie si le paramètre est une liste (0,*)(1,*). /]
[query public isMultiple(p : soa::Parameter) : Boolean = p.multiplicity = environment::MultiplicityKind::ONE_STAR 
  or p.multiplicity = environment::MultiplicityKind::ZERO_STAR/]

[comment vérifie si le paramètre est optionnel (pour l'instant et dans ce cas, les listes ne sont pas considérées comme tel)./]
[query public isOptional(p : soa::Parameter) : Boolean = if (p <> null) then p.multiplicity = environment::MultiplicityKind::ZERO_ONE 
  else true endif/]
  
[comment vérifie si le paramètre est optionnel dans le cadre des services rest./]
[query public rsIsOptional(p : soa::Parameter) : Boolean = if (p <> null) then p.multiplicity = environment::MultiplicityKind::ZERO_ONE 
  or p.multiplicity = environment::MultiplicityKind::ZERO_STAR else false endif/]

[comment vérifie si le paramètre est obligatoire./]
[query public isMandatory(p : soa::Parameter) : Boolean = if (p <> null) then p.multiplicity = environment::MultiplicityKind::ONE 
  or p.multiplicity = environment::MultiplicityKind::ONE_STAR else false endif/]
  
[comment retourne le type pour le paramètre soa./]
[query public type(p : soa::Parameter) : String =  if (p.type = null) then 'String' else if (p.isMultiple()) 
  then 'List<' + p.type.type() + '>'else p.type.type() endif endif/]
