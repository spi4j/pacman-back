[module property(	'http://www.obeonetwork.org/dsl/environment/3.0.0', 
					'http://www.obeonetwork.org/dsl/entity/3.0.0',
					'http://www.obeonetwork.org/dsl/soa/4.0.0')/]

[import fr::pacman::core::aql::base/]
[import fr::pacman::core::aql::string/]
[import fr::pacman::core::aql::name::classes/]
[import fr::pacman::core::aql::rule::class/]
[import fr::pacman::core::service::AnnotationUtils/]

[comment liste des requêtes possibles sur les propriétés./]

[comment vérifie si la propriété est une liste (1,*)(0,*). /]  
[query public isMultiple(p : environment::Property) : Boolean = p.multiplicity = environment::MultiplicityKind::ONE_STAR 
  or p.multiplicity = environment::MultiplicityKind::ZERO_STAR/]
  
[comment retourne le type formaté pour une propriété (attribut, paramètre, etc...)./]
[query public type(t : environment::Type) : String = 
  if (t.oclIsKindOf(environment::Enumeration)) then t.name.apply_classEnum()   
  else if (t.oclIsKindOf(entity::Entity)) then t.oclAsType(entity::Entity).nameClassEntityImpl()
  else if (t.oclIsKindOf(environment::DTO)) then t.oclAsType(environment::DTO).nameClassDtoImpl()
  else if (t.name.equalsIgnoreCase('Date')) then 'LocalDate' 
  else if (t.name.equalsIgnoreCase('TimeStamp')) then 'Instant' 
  else if (t.name.equalsIgnoreCase('Time')) then 'LocalTime' 
  else t.name.sanitize() endif endif endif endif endif endif/] 
